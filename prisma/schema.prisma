// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?       @map("email_verified")
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  signup_date   DateTime        @default(now())
  role          Role            @default(USER)
  uploadedImage UploadedImage[]
  BetaTokens    BetaTokens[]

  @@map("users")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model UploadedImage {
  /// the id of the db row
  id String @id @default(uuid())

  /// the user id fk
  userId String

  /// The user that this is related to
  user User @relation(fields: [userId], references: [id])

  /// the url to the s3 uploaded assets
  url String @db.VarChar(256)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model BetaTokens {
  id     Int     @id @default(autoincrement())
  token  String  @unique
  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

enum Role {
  USER
  ADMIN
}
